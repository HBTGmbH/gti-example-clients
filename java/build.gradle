plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'java-library'
    id 'application'
    alias(libs.plugins.openapi)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.bundles.openapi
}

group = 'de.hbt.gti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated/gti/src/main"
    }
}

openApiGenerate {
    def file = new File("$buildDir/gti.yaml")
    if (!file.exists()) {
        file.getParentFile().mkdirs()
        new URL('https://gti.geofox.de/v3/api-docs.yaml/public')
                .withInputStream { i -> file.withOutputStream { it << i } }
    }
    generatorName.set("java")
    inputSpec.set("$buildDir/gti.yaml")
    outputDir.set("$buildDir/generated/gti")
    apiPackage.set("de.hbt.gti.client")
    invokerPackage.set("de.hbt.gti.invoker")
    modelPackage.set("de.hbt.gti.model")
    configOptions.set([
            dateLibrary: "java8"
    ])
    typeMappings = [
            OffsetDateTime: "String"
    ]
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    enablePostProcessFile = false
}

application {
    mainClass = 'de.hbt.gti.exampleclient.ExampleClientApplication'
}

compileJava.dependsOn tasks.openApiGenerate
